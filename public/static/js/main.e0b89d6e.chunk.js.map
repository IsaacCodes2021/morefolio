{"version":3,"sources":["components/pages/HomePage.js","components/forms/Signup.js","components/pages/SignupPage.js","components/forms/Signin.js","components/pages/SignInPage.js","components/MyDrawer.js","components/MyAppBar.js","components/Dialogs/EditUserDialog.js","components/pages/UserPage.js","components/Dialogs/PortfolioItemInfo.js","components/Dialogs/UpdartePortfolioItem.js","components/Dialogs/DeletePortfolioItem.js","components/tables/PortfolioTable.js","components/pages/PortfolioPage.js","components/Dialogs/WatchlistMoreInfo.js","components/tables/WatchListTable.js","components/pages/WatchListPage.js","components/Dialogs/AddToPortfolio.js","components/Dialogs/CreateWatchlist.js","components/Dialogs/AddToWatchlist.js","components/Dialogs/InfoDialog.js","components/Cards/SearchResultCard.js","components/pages/SearchResultsPage.js","components/Dialogs/EditPostDialog.js","components/Cards/ForumPostCard.js","components/Dialogs/CreatePost.js","components/pages/FourmPage.js","App.js","reportWebVitals.js","index.js"],"names":["HomePage","Box","width","window","innerWidth","src","Signup","setUser","useState","username","email","password","passwordConfirmation","signUpForm","setSignupForm","onFormChange","e","target","name","value","onSubmit","preventDefault","alert","userData","fetch","method","headers","body","JSON","stringify","then","r","json","console","log","TextField","label","onChange","type","Button","variant","to","SignupPage","Container","setUse","Signin","history","useHistory","signInForm","setSigniInForm","a","response","ok","data","push","errors","SignInPage","MyDrawer","drawerOpen","setDrawerOpen","Drawer","open","onClose","color","style","height","backgroundColor","List","ListItemButton","onClick","ListItemIcon","bottom","right","position","marginLeft","MyAppBar","user","setSearchResults","searchResults","searchBar","setSearchBar","drawrOpen","setDrawrOpen","AppBar","Toolbar","sx","padding","search","size","Avatar","profile_img","EditUserDialog","editDialog","setEditDialog","updateUserData","setUpdateUserData","handleFormChange","Dialog","DialogTitle","id","res","UserPage","vw","margin","Card","CardContent","alt","Typography","PortfolioItemInfo","isOpen","setIsOpen","dialogData","setIsUpdateOpen","setIsDeleteOpen","isDeleteOpen","ticker","quantity","purchase_price","UpdatePortfolioItem","isUpdateOpen","setPortfolioItems","portfolioItems","updateForm","setUpdateForm","portfolio_items","marginBottom","DeletePortfolioItem","PortfolioTable","priceData","setTickerForFetch","setPriceData","tickerForFetch","isInfoDialogOpen","setIsInfoDialogOpen","setDialogData","price","profitLossDollar","standingValue","purchaseValue","PL","toFixed","useEffect","tickers","map","portfolioObj","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","portfolioItem","parseFloat","values","close","standingPrice","PortfolioPage","code","marginTop","s","WatchListMoreInfo","setOpen","setWatchlistItems","symbol","high","low","change","percent_change","itemId","WatchListTable","selectedWatchlist","watchlistItems","showMoreInfe","setShowMoreInfo","moreInfoData","setMoreInfoData","handleMoreClick","parse","watchlist","watchlist_items","item","responsePriceData","length","fifty_two_week","range","watchlistItem","WatchListPage","setSelectedWatchlist","Select","defaultValue","MenuItem","watchlists","watchlistObj","AddToPortfolio","portDialog","setPortDialog","purchase_date","addtoPortForm","setAddToPortForm","formDataToApi","arrOfObj","setTickerArray","display","marginRight","CreateWatchlist","isCreateWatchlistOpen","setIsCreateWatchlistOpen","setWatchlists","user_id","AddToWatchList","cardData","cardTitle","setCardTitle","selectedList","setSelectedList","watchLists","list","watchlist_id","InfoDialog","require","config","SearchResultCard","isPortDialogOpen","setIsPortDialogOpen","selectedTickerData","setSelectedTickerData","isWatchDialogOpen","setIsWatchDialogOpen","instrument_name","exchange","SearchResultsPage","results","stockInfo","element","EditPostDialog","post","title","content","formData","setFormData","multiline","maxRows","PostCard","liked","setLiked","likes","setLikes","isEditPostOpen","setPostOpen","showComments","setShowComments","post_id","commentText","setCommentText","newComments","setNewComments","post_comments","fullWidth","comment","Divider","profile","CreatePost","isPostOpen","setIsPostOpen","postData","setPostData","FourmPage","SpeedDial","ariaLabel","icon","textAlign","theme","createTheme","palette","primary","main","secondary","third","contrastText","blackish","App","ThemeProvider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0b89d6e.chunk.js","sourcesContent":["import { Box } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nfunction HomePage() {\r\n    return(\r\n        <Box>\r\n            <img width={window.innerWidth} src=\"/morem.png\"/>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default HomePage","import {useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n    TextField,\r\n    Box,\r\n    Button\r\n}from '@mui/material/';\r\n\r\n\r\nfunction Signup({ setUser }) {\r\n    const [signUpForm, setSignupForm] = useState({\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        passwordConfirmation: \"\"\r\n    })\r\n\r\n    function submitNewUser(e) {\r\n        e.preventDefault()\r\n        if(signUpForm.password === \"\") {\r\n            alert(\"cannot leave password blank\")\r\n        }\r\n        else if(signUpForm.username === \"\") {\r\n            alert(\"cannot leave username blank\")\r\n        }\r\n        else if(signUpForm.email === \"\") {\r\n            alert(\"cannot leave email blank\")\r\n        }\r\n        else if (signUpForm.password !== signUpForm.passwordConfirmation) {\r\n            alert(\"passwords not matching\")\r\n        }\r\n        else if (signUpForm.password === signUpForm.passwordConfirmation) {\r\n            let userData = signUpForm\r\n            delete userData.passwordConfirmation\r\n            fetch('/signup', {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(userData)\r\n            })\r\n            .then(r => r.json())\r\n            .then(console.log)\r\n        }   \r\n    }\r\n\r\n    function onFormChange(e) {\r\n        setSignupForm((signUpForm) => ({\r\n            ...signUpForm,\r\n            [e.target.name]: e.target.value\r\n        }))\r\n    }\r\n\r\n    return(\r\n        <Box>\r\n            <form onSubmit={submitNewUser}>\r\n                <TextField\r\n                name=\"username\"\r\n                label=\"Username\"\r\n                onChange={onFormChange}\r\n                value={signUpForm.username}\r\n                />\r\n                <TextField\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                onChange={onFormChange} \r\n                value={signUpForm.email}\r\n                />\r\n                <TextField\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                onChange={onFormChange}\r\n                value={signUpForm.password} \r\n                />\r\n                <TextField\r\n                name=\"passwordConfirmation\"\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                onChange={onFormChange}\r\n                value={signUpForm.passwordConfirmation}\r\n                />\r\n                <Button \r\n                variant=\"contained\" \r\n                type=\"submit\"\r\n                >\r\n                    submit\r\n                </Button>\r\n            </form>\r\n            <Link \r\n                to=\"/signin\"\r\n            >\r\n                <Button \r\n                    variant=\"contained\"\r\n                > \r\n                    Already have an account?\r\n                </Button>\r\n            </Link>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Signup","import { Container } from '@mui/material';\r\nimport Signup from '../forms/Signup';\r\n\r\nfunction SignupPage({setUser}) {\r\n    return (\r\n        <Container>\r\n            <Signup setUse={setUser}/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SignupPage","import {useState} from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport {\r\n    TextField,\r\n    Box,\r\n    Button\r\n}from '@mui/material/';\r\n\r\nfunction Signin({ setUser }) {\r\n\r\n    const history = useHistory()\r\n    const [signInForm, setSigniInForm] = useState({\r\n        username: \"\",\r\n        password: \"\"\r\n    })\r\n\r\n    function onFormChange(e) {\r\n        setSigniInForm((signInForm) => ({\r\n            ...signInForm, \r\n            [e.target.name]: e.target.value\r\n        }))\r\n    }\r\n\r\n    async function submitSignIn(e) {\r\n        e.preventDefault()\r\n        if (signInForm.username === \"\") {\r\n            alert(\"please enter a username\")\r\n        }\r\n        else if (signInForm.password === \"please enter a password\") {\r\n            alert(\"please enter a password\")\r\n        }\r\n        else if(signInForm.username !== \"\" && signInForm.password !== \"\") {\r\n            const response = await fetch('/login', {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(signInForm)\r\n            })\r\n            if (response.ok) {\r\n                response.json()\r\n                .then(data=> setUser(data))\r\n                history.push('/my-account')\r\n            }\r\n            else {\r\n                response.json()\r\n                .then(data => alert(data.errors))\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            <form onSubmit={submitSignIn}>\r\n                <TextField\r\n                name=\"username\"\r\n                label=\"Username\"\r\n                onChange={onFormChange}\r\n                value={signInForm.username}\r\n                />\r\n                <TextField\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                onChange={onFormChange}\r\n                value={signInForm.password} \r\n                />\r\n                <Button \r\n                variant=\"contained\" \r\n                type=\"\"\r\n                >\r\n                    signin\r\n                </Button>\r\n                <Link \r\n                to=\"/signup\">\r\n                    <Button\r\n                    variant=\"contained\"\r\n                    >\r\n                        don't have an account?\r\n                    </Button>\r\n                </Link>\r\n\r\n            </form>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Signin","import {\r\n    Box\r\n} from \"@mui/system\";\r\nimport Signin from \"../forms/Signin\";\r\n\r\n\r\nfunction SignInPage({setUser}) {\r\n\r\n    return(\r\n        <Box>\r\n            <Signin setUser={setUser}/>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SignInPage\r\n\r\n","import {\r\n    Drawer, \r\n    ListItemIcon, \r\n    Typography,\r\n    Box,\r\n    Button,\r\n    List,\r\n    ListItemButton\r\n} from '@mui/material'\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\r\nimport FormatListBulletedIcon from '@mui/icons-material/FormatListBulleted';\r\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\r\nimport ForumIcon from '@mui/icons-material/Forum';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\n\r\nfunction MyDrawer({drawerOpen, setDrawerOpen, setUser}) {\r\n    const history = useHistory()\r\n\r\n    function handleLogOut() {\r\n        fetch(\"/logout\", {\r\n        method: \"DELETE\",\r\n        });\r\n        setUser(false);\r\n        history.push('/')\r\n        setDrawerOpen(!drawerOpen)\r\n    }\r\n    \r\n    function handleHome() {\r\n        setDrawerOpen(!drawerOpen)\r\n        history.push('/')\r\n    }\r\n\r\n    function handleDashboard() {\r\n        setDrawerOpen(!drawerOpen)\r\n        history.push('/my-account')\r\n    }\r\n\r\n    function handlePortfolio() {\r\n        setDrawerOpen(!drawerOpen)\r\n        history.push('/my-portfolio')\r\n    }\r\n\r\n    function handleWatchlist() {\r\n        setDrawerOpen(!drawerOpen)\r\n        history.push('/my-watchlists')\r\n    }\r\n\r\n    function handleForum() {\r\n        setDrawerOpen(!drawerOpen)\r\n        history.push('/forum')\r\n    }\r\n\r\n    return(\r\n        <Drawer\r\n            open={drawerOpen}\r\n            onClose={(drawerOpen) => setDrawerOpen(!drawerOpen)}\r\n            color=\"secondary\"\r\n        >\r\n            <Box style={{width:\"300px\", height: \"100%\", backgroundColor: \"#D6F9FF\"}} >\r\n                <List>\r\n                    <ListItemButton onClick={handleHome}>\r\n                        <ListItemIcon>\r\n                            <HomeIcon color=\"blackish\"/>\r\n                        </ListItemIcon>\r\n                        Home\r\n                    </ListItemButton>\r\n                    <ListItemButton onClick={handleForum}>\r\n                        <ListItemIcon>\r\n                        <ForumIcon color=\"blackish\" />        \r\n                        </ListItemIcon>\r\n                        Forum\r\n                    </ListItemButton>\r\n                    <ListItemButton onClick={handleDashboard}>\r\n                        <ListItemIcon>\r\n                            <AccountBoxIcon color=\"blackish\" />\r\n                        </ListItemIcon>\r\n                        Dashboard\r\n                    </ListItemButton>\r\n                    <ListItemButton onClick={handlePortfolio}>\r\n                        <ListItemIcon>\r\n                            <AccountBalanceWalletIcon color=\"blackish\" />\r\n                        </ListItemIcon>\r\n                        my portfolio\r\n                    </ListItemButton>\r\n                    <ListItemButton onClick={handleWatchlist}>\r\n                        <ListItemIcon>\r\n                            <FormatListBulletedIcon color=\"blackish\" />\r\n                        </ListItemIcon>\r\n                        my watchlists\r\n                    </ListItemButton>\r\n                </List>\r\n                <Button variant=\"contained\" style={{bottom: 16, right: 16, position:\"absolute\"}} onClick={handleLogOut}>\r\n                    log out\r\n                    <LogoutIcon style={{marginLeft: \"6px\"}}/>\r\n                </Button>\r\n            </Box>\r\n        </Drawer>\r\n    )\r\n}\r\n\r\nexport default MyDrawer","import {\r\n  AppBar,\r\n  Typography,\r\n  Button,\r\n  Avatar,\r\n  Box,\r\n  TextField,\r\n  Toolbar\r\n} from \"@mui/material\";\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\n//import imageLogo from '/more-f.jpg'\r\nimport MyDrawer from \"./MyDrawer\";\r\n\r\nfunction MyAppBar({ user, setUser, searchResults, setSearchResults }) {\r\n  const [lastTotalValue, setLastTotalValue] = useState(0)\r\n  const [searchBar, setSearchBar] = useState('')\r\n  const [drawrOpen, setDrawrOpen] = useState(false)\r\n  const history = useHistory();\r\n  \r\n  function handleSearch(e) {\r\n    e.preventDefault();\r\n    setSearchResults(e.target.search.value)\r\n    console.log(e.target.search.value)\r\n    history.push(\"/asset-search\");\r\n\r\n  }\r\n  function handleSearchChange(e) {\r\n    setSearchBar(e.target.value)\r\n  }\r\n\r\n  function handleLogoClick() {\r\n    setDrawrOpen(!drawrOpen)\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <AppBar position=\"static\" color=\"third\">\r\n      <MyDrawer setDrawerOpen={setDrawrOpen} drawerOpen={drawrOpen} setUser={setUser}/>\r\n      <Toolbar >\r\n        <img width=\"110\" src=\"/morefolio.png\" onClick={handleLogoClick} />\r\n        <Box sx={{padding: \"inherit\", height:\"inherit\", width: \"30%\"}}>\r\n        <form onSubmit={handleSearch}>\r\n          <TextField size=\"small\" label=\"search stocks and crypto\" name=\"search\" onChange={handleSearchChange} value={searchBar} />\r\n        </form>\r\n        </Box>\r\n        {user ? (\r\n          <Box style={{position: 'absolute', right: 0}}>\r\n            <Toolbar >\r\n            <Link to=\"/my-account\">\r\n              <Avatar src={user.profile_img} />\r\n            </Link>\r\n            </Toolbar>\r\n          </Box>\r\n        ) : (\r\n          <Link to=\"/signin\">\r\n            <Button variant=\"contained\" color=\"primary\">\r\n              sign in\r\n            </Button>\r\n          </Link>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default MyAppBar;\r\n","import { useState } from 'react';\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    TextField,\r\n    Button\r\n} from '@mui/material/';\r\n\r\nfunction EditUserDialog({ editDialog, setEditDialog, user, setUser }) {\r\n    const [updateUserData, setUpdateUserData] = useState({\r\n            username: user.username,\r\n            profile_img: user.profile_img            \r\n        }\r\n    )\r\n    \r\n    function handleUserUpdate(e) {\r\n        e.preventDefault()\r\n        fetch(`/users/${user.id}`, {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(updateUserData)\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setUser(data)\r\n        })\r\n        console.log(updateUserData)\r\n    }\r\n\r\n    function handleFormChange(e) {\r\n        setUpdateUserData({\r\n            ...updateUserData,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    function handleDeleteAccount() {\r\n        \r\n    }\r\n\r\n    return(\r\n        <Dialog\r\n        open={editDialog}\r\n        onClose={(editDialog) => setEditDialog(!editDialog)}\r\n        >\r\n            <DialogTitle>User Settings</DialogTitle>\r\n            <form onSubmit={handleUserUpdate}>\r\n                <TextField\r\n                    label=\"username\"\r\n                    name=\"username\"\r\n                    value={updateUserData.username}\r\n                    onChange={handleFormChange}\r\n                />\r\n                <TextField \r\n                    label=\"profile picture\"\r\n                    name=\"profile_img\"\r\n                    value={updateUserData.profile_img}\r\n                    onChange={handleFormChange}\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    type=\"submit\"\r\n                    onClick={console.log(updateUserData)}\r\n                >\r\n                    update\r\n                </Button>\r\n            </form>\r\n            <Button color=\"error\" onClick={handleDeleteAccount}>Delete Account</Button>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default EditUserDialog","import {\r\n    Box,\r\n    Typography,\r\n    Card,\r\n    CardContent,\r\n    Avatar,\r\n    Button\r\n} from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport EditUserDialog from \"../Dialogs/EditUserDialog\";\r\nimport { useHistory } from \"react-router-dom\";\r\nfunction UserPage({ user, setUser }) {\r\n    const[editDialog, setEditDialog] = useState(false)\r\n    const history = useHistory()\r\n    function handleOpenEdit() {\r\n        setEditDialog(!editDialog)\r\n    }\r\n\r\n    return(\r\n        <Box style={{vw: \"90\", margin: \"5%\"}}>\r\n            <EditUserDialog \r\n                setEditDialog={setEditDialog} \r\n                editDialog={editDialog}\r\n                user={user}\r\n                setUser={setUser}\r\n            />\r\n            {user ?\r\n             <Card >\r\n                <CardContent>\r\n                    <Avatar alt={user.username} src={user.profile_img}/>\r\n                    <Typography>\r\n                        username: {user.username}\r\n                    </Typography>\r\n                    <Typography>\r\n                        email: {user.email}\r\n                    </Typography>\r\n                    <Button\r\n                    variant=\"contained\"\r\n                    onClick={handleOpenEdit}\r\n                    style={{margin: '7px'}}\r\n                    >\r\n                        edit\r\n                    </Button><br/>\r\n                    <Button style={{margin: '7px'}} variant='contained' onClick={() => history.push('/my-portfolio')}>my portfolio</Button><br/>\r\n                    <Button style={{margin: '7px'}} variant='contained' onClick={() => history.push('/my-watchlists')}> my watchlists</Button>\r\n                </CardContent>\r\n            </Card>\r\n            :\r\n            <Typography\r\n            variant=\"h4\"\r\n            >\r\n                User not signed in\r\n            </Typography>    \r\n            }\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default UserPage","import { useState } from 'react';\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    TextField,\r\n    Button,\r\n    Typography\r\n} from '@mui/material/';\r\n\r\nfunction PortfolioItemInfo({ isOpen, setIsOpen, dialogData, setIsUpdateOpen, setIsDeleteOpen, isDeleteOpen }) {\r\n\r\n    console.log(dialogData)\r\n    function handleUpdateButton() {\r\n        setIsOpen((isOpen) => setIsOpen(!isOpen))\r\n        setIsUpdateOpen(true)\r\n    }\r\n\r\n    function handleDeleteButton() {\r\n        setIsOpen((isOpen) => setIsOpen(!isOpen))\r\n        setIsDeleteOpen(!isDeleteOpen)\r\n    }\r\n\r\n    return(\r\n        <Dialog open={isOpen} onClose={(isOpen) => setIsOpen(!isOpen)}>\r\n            <DialogTitle>{dialogData.ticker}</DialogTitle>\r\n            <Typography\r\n            style={{marginLeft: \"8px\"}}\r\n            >holdings: {dialogData.quantity}</Typography>\r\n            <Typography\r\n            style={{marginLeft: \"8px\"}}\r\n            >purchase price: {dialogData.purchase_price}</Typography>\r\n            <Button onClick={handleUpdateButton}>update holdings</Button>\r\n            <Button onClick={handleDeleteButton} color=\"error\">Remove</Button>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default PortfolioItemInfo","import {\r\n    Dialog,\r\n    DialogTitle,\r\n    TextField,\r\n    Button,\r\n    Typography\r\n} from '@mui/material/';\r\nimport PublishIcon from '@mui/icons-material/Publish';\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction UpdatePortfolioItem({isUpdateOpen, setIsUpdateOpen, dialogData, setPortfolioItems, portfolioItems}) {\r\n    const history = useHistory();\r\n    const [updateForm, setUpdateForm] = useState({\r\n    })\r\n    console.log(dialogData)\r\n\r\n    function handlePortfolioItemUpdate(e) {\r\n        e.preventDefault()\r\n        fetch(`/portfolio_item/${dialogData.id}`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(updateForm)\r\n        })\r\n        .then(res => res.json())\r\n        .then(() => {\r\n            setIsUpdateOpen(false)\r\n            fetch('/me')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setPortfolioItems(data.portfolio_items)\r\n                console.log(\"from fetch\")\r\n                console.log(portfolioItems)\r\n                setUpdateForm({\r\n                    quantity: \"\",\r\n                    purchase_price: \"\"\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    function handleFormChange(e) {\r\n        setUpdateForm({\r\n            ...updateForm,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Dialog open={isUpdateOpen} onClose={(isUpdateOpen) => setIsUpdateOpen(!isUpdateOpen)}>\r\n            <DialogTitle>edit {dialogData.ticker} holdings</DialogTitle>\r\n            <form onSubmit={handlePortfolioItemUpdate}>\r\n                <TextField \r\n                label={`shares: ${dialogData.quantity}`} \r\n                name='quantity' \r\n                value={updateForm.quantity} \r\n                onChange={handleFormChange}\r\n                size=\"small\"\r\n                style={{marginLeft: \"8px\", marginBottom: '8px'}}\r\n                />\r\n                <TextField \r\n                label={`purchase price: ${dialogData.purchase_price}`} \r\n                name='purchase_price' \r\n                value={updateForm.purchase_price} \r\n                onChange={handleFormChange}\r\n                size=\"small\"\r\n                style={{marginLeft: \"8px\", marginBottom: '8px'}}\r\n                />\r\n                <Button type=\"submit\">\r\n                    <PublishIcon />\r\n                </Button>\r\n            </form>\r\n        </Dialog>\r\n    )\r\n}\r\nexport default UpdatePortfolioItem","import {\r\n    Dialog,\r\n    DialogTitle,\r\n    Button\r\n} from '@mui/material/';\r\n\r\nfunction DeletePortfolioItem({isDeleteOpen, setIsDeleteOpen, dialogData, setPortfolioItems, portfolioItems}) {\r\n    function handleDeleteClick() {\r\n        fetch(`/portfolio-item/${dialogData.id}`, {\r\n            method: \"DELETE\"\r\n        })\r\n        .then(res => res.json())\r\n        .then(() => {\r\n            fetch('/me')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setPortfolioItems(data.portfolio_items)\r\n            })\r\n        })\r\n        setIsDeleteOpen(!isDeleteOpen)\r\n    }\r\n\r\n    \r\n    return (\r\n        <Dialog open={isDeleteOpen} onClose={(isDeleteOpen) => setIsDeleteOpen(!isDeleteOpen)}>\r\n            <DialogTitle>Are you sure you want to remove {dialogData.ticker} from your portfolio?</DialogTitle>\r\n            <Button color=\"error\" onClick={handleDeleteClick}>delete</Button>\r\n            <Button onClick={(isDeleteOpen) => setIsDeleteOpen(!isDeleteOpen)}>Exit</Button>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default DeletePortfolioItem","import {\r\n    Table,\r\n    TableCell,\r\n    TableBody,\r\n    TableHead,\r\n    TableRow,\r\n    TableContainer,\r\n    Paper,\r\n    Box,\r\n    Button,\r\n    Typography\r\n} from '@mui/material'\r\nimport ReadMoreIcon from '@mui/icons-material/ReadMore';\r\nimport { \r\n    useState,\r\n    useEffect\r\n} from 'react'\r\nimport PortfolioItemInfo from '../Dialogs/PortfolioItemInfo';\r\nimport UpdatePortfolioItem from '../Dialogs/UpdartePortfolioItem';\r\nimport DeletePortfolioItem from '../Dialogs/DeletePortfolioItem';\r\n\r\nfunction PortfolioTable({user, priceData, setPriceData, tickerForFetch, setTickerForFetch}) {\r\n    const [isInfoDialogOpen, setIsInfoDialogOpen] = useState(false)\r\n    const [dialogData, setDialogData] = useState(false)\r\n    const [isUpdateOpen, setIsUpdateOpen] = useState(false)\r\n    const [isDeleteOpen, setIsDeleteOpen] = useState(false)\r\n    const [portfolioItems, setPortfolioItems] = useState(user.portfolio_items)\r\n    let price=0\r\n    \r\n    useEffect(() => {\r\n        fetch('/me')\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setPortfolioItems(data.portfolio_items)\r\n            console.log(\"from fetch\")\r\n            console.log(portfolioItems)\r\n            const  tickers = portfolioItems.map((portfolioObj) => portfolioObj.ticker)\r\n            setTickerForFetch(tickers)\r\n        })\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        const  tickers = portfolioItems.map((portfolioObj) => portfolioObj.ticker)\r\n        setTickerForFetch(tickers)\r\n    },[portfolioItems])\r\n\r\n\r\n    function profitLossPercent(standingValue, purchaseValue) {\r\n        // if profit\r\n        if(standingValue > purchaseValue) {\r\n            return ([(((standingValue - purchaseValue) / purchaseValue) * 100).toFixed(2), true])\r\n        }\r\n        //if loss\r\n        else if(standingValue < purchaseValue) {\r\n            return ([(((purchaseValue - standingValue) / purchaseValue) * 100).toFixed(2), false])\r\n        }\r\n    }\r\n\r\n    function profitLossDollar(standingValue, purchaseValue) {\r\n        let PL = standingValue - purchaseValue\r\n        if(PL > 0) {\r\n            return([PL.toFixed(2), true])\r\n        }\r\n        else if (PL < 0) {\r\n            return([PL.toFixed(2), false])\r\n        }\r\n    }\r\n\r\n    function handleRowClick(e) {\r\n        setIsInfoDialogOpen(true)\r\n        setDialogData(e)\r\n    }\r\n\r\n    function getTotalPriceData(standingPrice, quantity) {\r\n        price = price + (standingPrice * quantity)\r\n        console.log(price)\r\n        return standingPrice * quantity\r\n\r\n    }\r\n    console.log(\"pricedata: \",priceData)\r\n    return (\r\n        <Box>\r\n            <PortfolioItemInfo \r\n                setIsOpen={setIsInfoDialogOpen} \r\n                isOpen={isInfoDialogOpen} \r\n                dialogData={dialogData} \r\n                setIsUpdateOpen={setIsUpdateOpen}\r\n                setIsDeleteOpen={setIsDeleteOpen} \r\n                isDeleteOpen={isDeleteOpen} \r\n                setPortfolioItems={setPortfolioItems} \r\n                portfolioItems={portfolioItems}\r\n            />\r\n            <UpdatePortfolioItem \r\n                isUpdateOpen={isUpdateOpen} \r\n                setIsUpdateOpen={setIsUpdateOpen} \r\n                dialogData={dialogData}\r\n                setPortfolioItems={setPortfolioItems} \r\n                portfolioItems={portfolioItems}\r\n            />\r\n            <DeletePortfolioItem \r\n                setIsDeleteOpen={setIsDeleteOpen} \r\n                isDeleteOpen={isDeleteOpen} \r\n                dialogData={dialogData} \r\n                setPortfolioItems={setPortfolioItems} \r\n                portfolioItems={portfolioItems}\r\n            />\r\n            <TableContainer component={Paper}>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Symbol</TableCell>\r\n                            <TableCell>Price</TableCell>\r\n                            <TableCell>Holdings</TableCell>\r\n                            <TableCell>Value</TableCell>\r\n                            <TableCell>P/L (%)</TableCell>\r\n                            <TableCell>P/L ($)</TableCell>\r\n                            <TableCell></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    \r\n                    <TableBody>{priceData? <>\r\n                        {portfolioItems.map((portfolioItem) => {\r\n                            console.log(\"--------items------\")\r\n                            console.log(\"ticker: \",(priceData[portfolioItem.ticker]))\r\n                            return ( portfolioItems && priceData?\r\n                                <TableRow >\r\n                                    <TableCell>{portfolioItem.ticker}</TableCell>\r\n                                    {priceData && portfolioItems ? \r\n                                    <TableCell>${parseFloat(priceData[portfolioItem.ticker].values[0].close).toFixed(2)}</TableCell>\r\n                                    :\r\n                                    <TableCell>waiting</TableCell>\r\n                                    }\r\n                                    <TableCell>{portfolioItem.quantity}</TableCell>\r\n                                    {priceData && portfolioItems ? \r\n                                    <TableCell>{getTotalPriceData(priceData[`${portfolioItem.ticker}`].values[0].close, portfolioItem.quantity).toFixed(2)}</TableCell>\r\n                                    :\r\n                                    <TableCell>waiting</TableCell>\r\n                                    }\r\n                                    {priceData && portfolioItems ?\r\n                                    <TableCell>\r\n                                        {profitLossPercent(\r\n                                        priceData[`${portfolioItem.ticker}`].values[0].close * portfolioItem.quantity,\r\n                                            portfolioItem.purchase_price * portfolioItem.quantity\r\n                                        )[0]}\r\n                                    </TableCell>\r\n                                    :\r\n                                    <TableCell>waiting</TableCell>\r\n                                    }\r\n                                    {priceData && portfolioItems ?\r\n                                    <TableCell>\r\n                                        {profitLossDollar(\r\n                                            priceData[`${portfolioItem.ticker}`].values[0].close * portfolioItem.quantity,\r\n                                            portfolioItem.purchase_price * portfolioItem.quantity\r\n                                        )[0]\r\n                                        }\r\n                                    </TableCell>\r\n                                    :\r\n                                    <TableCell>waiting</TableCell>\r\n                                    }\r\n                                    <TableCell>\r\n                                        <Button type=\"\" onClick={() => {\r\n                                            handleRowClick(portfolioItem)\r\n                                        }}>\r\n                                            <ReadMoreIcon />\r\n                                        </Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                :\r\n                                null\r\n                            )\r\n                        })}\r\n                        <TableRow style={{backgroundColor:'#90EE90'}}>\r\n                            <TableCell>\r\n                                <Typography variant='h5'>Total</Typography>\r\n                            </TableCell>\r\n                            <TableCell></TableCell>\r\n                            <TableCell></TableCell>\r\n                            <TableCell><Typography variant='h5'>${price.toFixed(2)}</Typography></TableCell>\r\n                            <TableCell></TableCell>\r\n                            <TableCell></TableCell>\r\n                            <TableCell></TableCell>\r\n                            \r\n                        </TableRow></>\r\n                        :\r\n                        null }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default PortfolioTable","import {\r\n    Box,\r\n    Button,\r\n    Typography\r\n} from '@mui/material'\r\nimport PortfolioTable from '../tables/PortfolioTable'\r\nimport { useState, useEffect } from 'react'\r\n\r\nfunction PortfolioPage({user, priceData, setPriceData, tickerForFetch, setTickerForFetch}) {\r\n    console.log(\"portfolio page tickers\", tickerForFetch)\r\n\r\n    useEffect(() => {\r\n        if(tickerForFetch) {\r\n            fetch(`https://api.twelvedata.com/time_series?symbol=${tickerForFetch}&interval=1min&apikey=5b65bc522cdd4e51a3c12d1073b5e3ef`)\r\n            .then(r => r.json())\r\n            .then(response =>{\r\n                if(response.code) {\r\n                    console.log(\"api 2\")\r\n                    fetch(`https://api.twelvedata.com/time_series?symbol=${tickerForFetch}&interval=1min&apikey=60af8428441c4634a020712e7cd5f7e1`)\r\n                    .then(r => r.json())\r\n                    .then(data => {\r\n                        if(data.code) {\r\n                            console.log(\"\")\r\n                            fetch(`https://api.twelvedata.com/time_series?symbol=${tickerForFetch}&interval=1min&apikey=c388556de8104717a7b14b0d9281eb96`)\r\n                            .then(r => r.json())\r\n                            .then(data => {\r\n                                if(data.code) {\r\n                                    alert(\"data request limit exceded please try again in 1 min\")\r\n                                }\r\n                                else {\r\n                                    setPriceData(data)\r\n                                }\r\n                            })\r\n                        }\r\n                        else {\r\n                            setPriceData(data)\r\n                        }\r\n                    })\r\n                }\r\n                else {\r\n                    setPriceData(response)\r\n                    console.log(\"api 1\")\r\n                }\r\n            })\r\n        }\r\n        else if (tickerForFetch !== []){\r\n\r\n        }\r\n    },[])\r\n\r\n\r\n    return (user ?\r\n        <Box>\r\n            <Typography \r\n            variant=\"h4\"\r\n            style={{marginLeft: \"8px\", marginTop: \"8px\"}}\r\n            >{user.username}'s Portfolio</Typography>\r\n            <PortfolioTable user={user} priceData={priceData} setPriceData={setPriceData} tickerForFetch={tickerForFetch} setTickerForFetch={setTickerForFetch}s/>\r\n        </Box>\r\n        :\r\n        <Typography variant=\"h4\">login or create an account to see portfolio</Typography>\r\n    )\r\n}\r\nexport default PortfolioPage","import { useState } from 'react';\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    TextField,\r\n    Button,\r\n    Table,\r\n    TableCell,\r\n    TableBody,\r\n    TableHead,\r\n    TableRow,\r\n    TableContainer,\r\n    Paper\r\n} from '@mui/material'\r\n\r\nfunction WatchListMoreInfo({isOpen, setOpen, data, setWatchlistItems}) {\r\n    function removeWatchListItem(e) {\r\n        fetch(`/watchlist-items/${e.target.value}`, {\r\n            method: \"DELETE\"\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => setWatchlistItems(data))\r\n    }\r\n\r\n    return(\r\n        <Dialog open={isOpen} onClose={(isOpen) => setOpen(!isOpen)}>\r\n            {\r\n            data ? <>\r\n            <DialogTitle>{data.symbol} info</DialogTitle>\r\n            <TableContainer component={Paper}>\r\n                <Table>\r\n                    <TableBody>\r\n                        <TableRow>\r\n                            <TableCell>full name</TableCell>\r\n                            <TableCell>{data.priceData.name}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell>day high</TableCell>\r\n                            <TableCell>${data.priceData.high}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell>day low</TableCell>\r\n                            <TableCell>${data.priceData.low}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell>day open</TableCell>\r\n                            <TableCell>${data.priceData.open}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell>day close</TableCell>\r\n                            <TableCell>${data.priceData.close}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell>day change($)</TableCell>\r\n                            <TableCell>{data.priceData.change}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell>day change(%)</TableCell>\r\n                            <TableCell>{data.priceData.percent_change}</TableCell>\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <Button \r\n            color=\"error\" \r\n            onClick={removeWatchListItem} \r\n            value={data.itemId}\r\n            style={{marginTop: \"8px\", marginBottom: \"8px\"}}\r\n            >remove</Button>\r\n            </>\r\n        :\r\n        null\r\n        }\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default WatchListMoreInfo","import {\r\n    useEffect,\r\n    useState \r\n} from \"react\"\r\n\r\nimport {\r\n    Table,\r\n    TableCell,\r\n    TableBody,\r\n    TableHead,\r\n    TableRow,\r\n    TableContainer,\r\n    Paper,\r\n    Typography,\r\n    Button\r\n} from \"@mui/material\"\r\n\r\nimport WatchListMoreInfo from \"../Dialogs/WatchlistMoreInfo\";\r\n\r\nfunction WatchListTable({user, selectedWatchlist, priceData, setPriceData}) {\r\n    const [watchlistItems, setWatchlistItems] = useState([])\r\n    const [tickerForFetch, setTickerForFetch] = useState(false)\r\n    const [showMoreInfe, setShowMoreInfo] = useState(false)\r\n    const [moreInfoData, setMoreInfoData] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        if(selectedWatchlist == false) {\r\n            console.log('no selected watchlist')\r\n        }\r\n        else {\r\n            fetch(`/watchlists/${selectedWatchlist}`)\r\n            .then(res => res.json())\r\n            .then(watchlist => {\r\n                setWatchlistItems(watchlist.watchlist_items)\r\n                setTickerForFetch(watchlist.watchlist_items.map((item) => item.ticker))\r\n            })\r\n        }\r\n    },[selectedWatchlist])\r\n\r\n    useEffect(() => {\r\n        if(tickerForFetch) {\r\n            fetch(`https://api.twelvedata.com/quote?symbol=${tickerForFetch}&apikey=5b65bc522cdd4e51a3c12d1073b5e3ef`)\r\n            .then(res => res.json())\r\n            .then(responsePriceData => {\r\n                setPriceData(responsePriceData)\r\n            })\r\n        }\r\n\r\n    },[tickerForFetch])\r\n\r\n    function handleMoreClick(e) {\r\n        setShowMoreInfo(true)\r\n        setMoreInfoData(JSON.parse(e.target.value))\r\n    }\r\n\r\n    return(\r\n        <>{priceData &&\r\n        <TableContainer component={Paper}>\r\n            <WatchListMoreInfo isOpen={showMoreInfe} setOpen={setShowMoreInfo} data={moreInfoData} setWatchlistItems={setWatchlistItems}/>\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Symbol</TableCell>\r\n                        <TableCell>price</TableCell>\r\n                        <TableCell>24hr change (%)</TableCell>\r\n                        <TableCell>1yr range</TableCell>\r\n                        <TableCell></TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                {\r\n                watchlistItems !== [] ?\r\n                    <TableBody>\r\n                        {\r\n                        watchlistItems.length === 1 ?\r\n                            <>\r\n                            {priceData ?\r\n                                <TableRow>\r\n                                <TableCell>{priceData.symbol}</TableCell>\r\n                                <TableCell>{priceData.close}</TableCell>\r\n                                <TableCell>{parseFloat(priceData.percent_change).toFixed(2)}</TableCell>\r\n                                <TableCell>{priceData.fifty_two_week.range}</TableCell>\r\n                                <TableCell><Button onClick={handleMoreClick} value={JSON.stringify({priceData: priceData, itemId: watchlistItems[0].id})}>more</Button></TableCell>\r\n                            </TableRow>\r\n                            :\r\n                            <Typography></Typography>\r\n                            }\r\n                            </>\r\n                        :\r\n                        watchlistItems.map((watchlistItem) => {\r\n                            return ( priceData ?\r\n                                <TableRow>\r\n                                    <TableCell>{watchlistItem.ticker}</TableCell>\r\n                                    <TableCell>{priceData[watchlistItem.ticker].close}</TableCell>\r\n                                    <TableCell>{parseFloat(priceData[watchlistItem.ticker].percent_change).toFixed(2)}</TableCell>\r\n                                    <TableCell>{priceData[watchlistItem.ticker].fifty_two_week.range}</TableCell>\r\n                                    <TableCell><Button onClick={handleMoreClick} value={JSON.stringify({priceData: priceData[watchlistItem.ticker], itemId: watchlistItem.id})}>more</Button></TableCell>\r\n                                </TableRow>\r\n                                :\r\n                                <Typography>loading...</Typography>\r\n                            )\r\n                        })\r\n                        \r\n                        }\r\n                    </TableBody>\r\n                    :\r\n                    null\r\n                }\r\n            </Table>\r\n        </TableContainer>\r\n    }\r\n    </>       \r\n    )\r\n}\r\n\r\nexport default WatchListTable","import { useEffect, useState } from 'react'\r\nimport {\r\n    Box,\r\n    Typography,\r\n    Select,\r\n    MenuItem,\r\n    InputLabel\r\n} from '@mui/material'\r\n\r\nimport WatchListTable from '../tables/WatchListTable'\r\n\r\nfunction WatchListPage({user}) {\r\n    const [selectedWatchlist, setSelectedWatchlist] = useState(false)\r\n    const [priceData, setPriceData] = useState(false)\r\n\r\n    useEffect(() => {\r\n        console.log(\"selected watchlist change\")\r\n    }, [selectedWatchlist])\r\n\r\n    function handleSelectChange(e) {\r\n        if(e.target.value !== \"list\"){\r\n            setSelectedWatchlist(e.target.value)\r\n            setPriceData(false)\r\n        }\r\n    }\r\n\r\n    return ( user ?\r\n        <Box>\r\n            <Select \r\n            onChange={handleSelectChange} \r\n            defaultValue=\"list\"\r\n            style={{margin:'8px'}}\r\n            >\r\n                <MenuItem value=\"list\">select a list</MenuItem>\r\n                {user.watchlists.map((watchlistObj) => {\r\n                    return(\r\n                        <MenuItem\r\n                        value={watchlistObj.id}\r\n                        >\r\n                            {watchlistObj.name}\r\n                        </MenuItem>\r\n                    )\r\n                })}\r\n            </Select>\r\n            <WatchListTable selectedWatchlist={selectedWatchlist} setPriceData={setPriceData} priceData={priceData}/>\r\n        </Box>\r\n        :\r\n        <Typography variant=\"h4\">login to see page</Typography>\r\n    )\r\n}\r\n\r\nexport default WatchListPage","import { useState } from 'react';\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    TextField,\r\n    Button\r\n} from '@mui/material/';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction AddToPortfolio({portDialog, setPortDialog, data, priceData, setPriceData, tickerForFetch, setTickerForFetch }) {\r\n    const history = useHistory()\r\n    const [addtoPortForm, setAddToPortForm] = useState({\r\n        ticker: data.symbol,\r\n        name: data.name,\r\n        purchase_price: \"\",\r\n        purchase_date: \"\",\r\n        quantity: \"\"\r\n    })\r\n\r\n    function handleFormChange(e) {\r\n        setAddToPortForm({\r\n            ...addtoPortForm,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    function setTickerArray(arrOfObj) {\r\n        const  tickers = arrOfObj.map((portfolioObj) => portfolioObj.ticker)\r\n        setTickerForFetch(tickers)\r\n        console.log(\"tick array\", tickerForFetch)\r\n    }\r\n\r\n    function handleFormSubmit(e) {\r\n        e.preventDefault()\r\n        console.log(\"btn click\", tickerForFetch)\r\n        // console.log([...tickerForFetch, addtoPortForm.ticker])\r\n        let formDataToApi = {...addtoPortForm}\r\n        delete formDataToApi.name\r\n        console.log(formDataToApi)\r\n        fetch('/portfolio_item', {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': \"application/json\"\r\n            },\r\n            body: JSON.stringify(formDataToApi)\r\n        })\r\n        .then(res => res.json())\r\n        .then(() => {\r\n            setPortDialog(!portDialog)\r\n            fetch('/me')\r\n            .then(r => r.json())\r\n            .then(data => {\r\n                setTickerArray(data.portfolio_items)\r\n                setTickerForFetch([\r\n                    ...tickerForFetch,\r\n                    addtoPortForm.ticker\r\n                ])\r\n                setPriceData(false)\r\n                console.log(\"priceData\", priceData)\r\n            })\r\n        })\r\n    }\r\n\r\n    return(\r\n        <Dialog open={portDialog} onClose={(portDialog) => setPortDialog(!portDialog)}>\r\n            <DialogTitle>{data.symbol}</DialogTitle>\r\n            <form onSubmit={handleFormSubmit}>\r\n                <TextField \r\n                label=\"purchase date\" \r\n                name=\"purchase_date\" \r\n                onChange={handleFormChange} \r\n                value={addtoPortForm.purchase_date}\r\n                style={{display: \"none\"}}     \r\n                />\r\n                <TextField \r\n                label=\"purchase price\" \r\n                name=\"purchase_price\" \r\n                onChange={handleFormChange} \r\n                value={addtoPortForm.purchase_price}\r\n                size=\"small\"\r\n                style={{marginLeft:\"8px\", marginBottom:\"8px\"}}\r\n                />\r\n                <TextField \r\n                label=\"amount\" \r\n                name=\"quantity\" \r\n                onChange={handleFormChange} \r\n                value={addtoPortForm.quantity}\r\n                size=\"small\"\r\n                style={{marginLeft:\"8px\", marginBottom:\"8px\"}}\r\n                />\r\n                <Button \r\n                type=\"submit\" \r\n                variant=\"contained\"\r\n                style={{marginLeft:\"8px\", marginRight:\"8px\"}}\r\n                >add</Button>\r\n            </form>\r\n        </Dialog>\r\n    )\r\n}\r\nexport default AddToPortfolio","import { useState } from 'react';\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    Button,\r\n    TextField\r\n} from '@mui/material/';\r\n\r\nfunction CreateWatchlist({ isCreateWatchlistOpen, setIsCreateWatchlistOpen, user, watchlists, setWatchlists }) {\r\n    function postNewWatchlist(e) {\r\n        e.preventDefault()\r\n        fetch('/watchlists', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                name: e.target.watchlist.value,\r\n                user_id: user.id\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            console.log(watchlists.push(data))\r\n        })\r\n    }\r\n    return (\r\n        <Dialog open={isCreateWatchlistOpen} onClose={(isCreateWatchlistOpen) => setIsCreateWatchlistOpen(!isCreateWatchlistOpen)}>\r\n            <DialogTitle>Create a Watchlist</DialogTitle>\r\n            <form onSubmit={postNewWatchlist}>\r\n                <TextField name=\"watchlist\" label=\"watchlist name\"/>\r\n                <Button type=\"submit\" variant=\"contained\">create</Button>\r\n            </form>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default CreateWatchlist","import { useState } from 'react';\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    Button,\r\n    Select,\r\n    MenuItem\r\n} from '@mui/material/';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle'\r\nimport CreateWatchlist from './CreateWatchlist'\r\nfunction AddToWatchList({ user, isOpen, setOpen, cardData }) {\r\n    const [cardTitle, setCardTitle] = useState(\"choose a watchlist\")\r\n    const [selectedList, setSelectedList] = useState(false)\r\n    const [isCreateWatchlistOpen, setIsCreateWatchlistOpen] = useState(false)\r\n    const [watchLists, setWatchlists] = useState(user.watchlists)\r\n\r\n    function handleSelectChange(e) {\r\n        if(e.target.value === \"add\") {\r\n            setIsCreateWatchlistOpen(true)\r\n        }\r\n        setCardTitle(e.target.value.name)\r\n        setSelectedList(e.target.value)\r\n    }\r\n\r\n    function submitWatchlist() {\r\n        console.log(selectedList)\r\n        if(selectedList || selectedList !== 'list') {\r\n            fetch(`/watchlist-items`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    watchlist_id: selectedList.id,\r\n                    ticker: cardData.symbol\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Dialog open={isOpen} onClose={(isOpen) => setOpen(!isOpen)}>\r\n            <CreateWatchlist isCreateWatchlistOpen={isCreateWatchlistOpen} setIsCreateWatchlistOpen={setIsCreateWatchlistOpen} user={user} setWatchlists={setWatchlists} watchlists={watchLists}/>\r\n            <DialogTitle>{cardTitle}</DialogTitle>\r\n                <Select\r\n                onChange={handleSelectChange}\r\n                style={{marginLeft:\"8px\", marginRight:'8px'}}\r\n                defaultValue=\"list\"\r\n                >\r\n                    <MenuItem value=\"list\">select a list</MenuItem>\r\n                    {watchLists.map((list) => {\r\n                        return <MenuItem value={list}>{list.name}</MenuItem>\r\n                    })}\r\n                    <MenuItem value=\"add\">\r\n                        create watchlist  \r\n                        <AddCircleIcon />\r\n                    </MenuItem>\r\n                </Select>\r\n                <Button \r\n                type=\"submit\" \r\n                variant=\"contained\" \r\n                onClick={submitWatchlist}\r\n                style={{margin:'8px'}}\r\n                >add {cardData.symbol}</Button>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default AddToWatchList","import {\r\n    Dialog,\r\n    Typography\r\n} from '@mui/material/';\r\n\r\nfunction InfoDialog({isOpen, setOpen, data}) {\r\n    console.log(\"info\", data)\r\n    \r\n    return ( data ?\r\n        <Dialog\r\n        open={isOpen}\r\n        onClose={(isOpen) => setOpen(!isOpen)}\r\n        >\r\n            <Typography \r\n            variant=\"h5\"\r\n            style={{marginLeft:\"8px\", marginTop:'8px'}}\r\n            >{data.symbol}</Typography>\r\n            <Typography\r\n            style={{marginLeft:'8px'}}\r\n            >last price: ${data.close}</Typography>\r\n            <Typography\r\n            style={{marginLeft:'8px', marginRight:\"8px\", marginBottom:'8px'}}\r\n            >52 wk range: {data.fifty_two_week.range}</Typography>\r\n        </Dialog>\r\n        :\r\n        null\r\n    )\r\n}\r\n\r\nexport default InfoDialog","import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport AddToPortfolio from \"../Dialogs/AddToPortfolio\";\r\nimport AddToWatchList from \"../Dialogs/AddToWatchlist\";\r\nimport InfoDialog from \"../Dialogs/InfoDialog\";\r\nimport { useState } from \"react\";\r\nrequire('dotenv').config()\r\n\r\nfunction SearchResultCard({ res, user, priceData, setPriceData, tickerForFetch, setTickerForFetch  }) {\r\n    const [isPortDialogOpen, setIsPortDialogOpen] = useState(false)\r\n    const [isInfoDialogOpen, setIsInfoDialogOpen] = useState(false)\r\n    const [selectedTickerData, setSelectedTickerData] = useState(false)\r\n    const [isWatchDialogOpen, setIsWatchDialogOpen] = useState(false)\r\n\r\n    function portDialog() {\r\n      fetch(`https://api.twelvedata.com/quote?symbol=${res.symbol}&apikey=60af8428441c4634a020712e7cd5f7e1`)\r\n      .then(r => r.json())\r\n      .then(setSelectedTickerData)\r\n      setIsPortDialogOpen(true)\r\n      // console.log(process.env.TWELVEDATA_API_TOKEN)\r\n    }\r\n\r\n    function infoDialog() {\r\n      fetch(`https://api.twelvedata.com/quote?symbol=${res.symbol}&apikey=60af8428441c4634a020712e7cd5f7e1`)\r\n      .then(r => r.json())\r\n      .then(setSelectedTickerData)\r\n      setIsInfoDialogOpen(true)\r\n    }\r\n\r\n    function watchDialog() {\r\n      setIsWatchDialogOpen(true)\r\n    }\r\n\r\n  return (\r\n    <Box>\r\n        {selectedTickerData && <AddToPortfolio portDialog={isPortDialogOpen} setPortDialog={setIsPortDialogOpen} data={selectedTickerData} priceData={priceData} setPriceData={setPriceData} tickerForFetch={tickerForFetch} setTickerForFetch={setTickerForFetch}/>}\r\n        {selectedTickerData && <InfoDialog isOpen={isInfoDialogOpen} setOpen={setIsInfoDialogOpen} data={selectedTickerData}/>}\r\n        <AddToWatchList isOpen={isWatchDialogOpen} setOpen={setIsWatchDialogOpen} user={user} cardData={res}/>\r\n      <Card\r\n      style={{margin:'4%'}}\r\n      >\r\n        <CardContent>\r\n          <Box sx={{display:'flex'}}>\r\n          <Typography variant=\"h5\">{res.symbol}</Typography>\r\n          <Button \r\n          variant=\"contained\" \r\n          onClick={infoDialog}\r\n          style={{marginLeft:'12px'}}\r\n          >info</Button>\r\n          </Box>\r\n          <Typography>company: {res.instrument_name}</Typography>\r\n          <Typography>exchange: {res.exchange}</Typography>\r\n          <Button \r\n          variant=\"contained\" \r\n          onClick={portDialog}\r\n          style={{marginBottom:'8px', marginRight: \"8px\"}}\r\n          >Add to portolio</Button>\r\n          <Button \r\n          variant=\"contained\" \r\n          onClick={watchDialog}\r\n          style={{marginBottom:'8px'}}\r\n          >Add to a watchlist</Button>\r\n          \r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  );\r\n}\r\nexport default SearchResultCard;\r\n","import { useState, useEffect } from \"react\";\r\nimport {\r\n  Box, Typography\r\n} from \"@mui/material\";\r\nimport SearchResultCard from \"../Cards/SearchResultCard\";\r\n\r\nfunction SearchResultsPage({ results, user, priceData, setPriceData, tickerForFetch, setTickerForFetch }) {\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  console.log(\"search page: \", tickerForFetch)\r\n  useEffect(() => {\r\n    fetch(\r\n      `https://api.twelvedata.com/symbol_search?symbol=${results}&outputsize=120`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((stockInfo) => {\r\n        setSearchResults(stockInfo.data);\r\n      });\r\n  }, [results]);\r\n\r\n  console.log(searchResults);\r\n  return (\r\n    <Box>\r\n      { user ?\r\n       searchResults.map((element) => {\r\n            return (\r\n                <SearchResultCard res={element} user={user} priceData={priceData} setPriceData={setPriceData} tickerForFetch={tickerForFetch} setTickerForFetch={setTickerForFetch}/>\r\n              )\r\n          })\r\n        : <Typography>Sign in to use this feature</Typography>}\r\n    </Box>\r\n  );\r\n}\r\nexport default SearchResultsPage;\r\n","import { useState } from 'react';\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    Button,\r\n    Select,\r\n    MenuItem,\r\n    TextField\r\n} from '@mui/material/';\r\n\r\nfunction EditPostDialog({ post, isOpen, setIsOpen }) {\r\n    const [formData, setFormData] = useState({\r\n        title: post.title,\r\n        content: post.content\r\n    })\r\n\r\n    function updatePost() {\r\n        fetch(`/posts/${post.id}`,{\r\n            method: \"PATCH\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(formData)\r\n        })\r\n    }\r\n\r\n    function handleFormChange(e) {\r\n        setFormData({\r\n            ...formData,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Dialog open={isOpen} onClose={(isOpen) => setIsOpen(!isOpen)}>\r\n            <DialogTitle>Edit Post</DialogTitle>\r\n            <form onSubmit={updatePost}>\r\n                <TextField name=\"title\" label=\"title\" onChange={handleFormChange} value={formData.title}/>\r\n                <TextField name=\"content\" label=\"content\" multiline maxRows={8} onChange={handleFormChange} value={formData.content}/>\r\n                <Button type=\"submit\" variant=\"contained\">publish</Button>\r\n            </form>\r\n        </Dialog>\r\n    )\r\n}\r\nexport default EditPostDialog","import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  Typography,\r\n  Avatar,\r\n  TextField\r\n} from \"@mui/material\";\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport ForumIcon from '@mui/icons-material/Forum';\r\nimport ModeEditIcon from '@mui/icons-material/ModeEdit';\r\nimport { useState } from \"react\";\r\nimport EditPostDialog from \"../Dialogs/EditPostDialog\";\r\n\r\nfunction PostCard({post, user}) {\r\n    const [liked, setLiked] = useState(false)\r\n    const [likes, setLikes] = useState(post.likes)\r\n    const [isEditPostOpen, setPostOpen] = useState(false)\r\n    const [showComments, setShowComments] = useState(false)\r\n    const [commentText, setCommentText] = useState({\r\n        post_id: post.id,\r\n        user_id: user.id,\r\n        content: \"\"\r\n    })\r\n    const [newComments, setNewComments] = useState([])\r\n\r\n    console.log(user)\r\n    function handleLikeBtn() {\r\n        setLiked(!liked)\r\n        if (liked){\r\n            fetch(`/posts/${post.id}`, {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({likes: likes - 1})\r\n            })\r\n            .then(r => r.json())\r\n            .then(() => setLikes(likes - 1))\r\n        }\r\n        else if(!liked) {\r\n            fetch(`/posts/${post.id}`, {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({likes: likes + 1})\r\n            })\r\n            .then(r => r.json())\r\n            .then(() => setLikes(likes + 1))\r\n        }\r\n    }\r\n\r\n    function handleEditBtn() {\r\n        setPostOpen(true)\r\n    }\r\n\r\n    function handleCommentButton() {\r\n        setShowComments(!showComments)\r\n    }\r\n\r\n    function handleCommentChange(e) {\r\n        setCommentText({\r\n            ...commentText,\r\n            content: e.target.value\r\n        })\r\n    }\r\n\r\n    function handleCommentSubmit(e) {\r\n        e.preventDefault()\r\n        fetch('/post-comments', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(commentText)\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            console.log(data)\r\n            setNewComments([...newComments, data])\r\n        })\r\n    }\r\n\r\n    return(\r\n        <Card style={{marginBottom: \"10px\"}}>\r\n            <EditPostDialog isOpen={isEditPostOpen} setIsOpen={setPostOpen} post={post}/>\r\n            <Box sx={{display: \"flex\"}}>\r\n                <Typography sx={{marginLeft: \"9px\"}} variant=\"h5\">{post.title}</Typography>\r\n                <Button onClick={handleLikeBtn}>\r\n                    <Typography>{likes}</Typography>\r\n                    {liked ?\r\n                        <FavoriteIcon />\r\n                        :\r\n                        <FavoriteBorderIcon />\r\n                        }\r\n                </Button>\r\n                <Button onClick={handleCommentButton}>\r\n                    <Typography>{post.post_comments.length}</Typography>\r\n                    <ForumIcon />\r\n                </Button>\r\n                {user.id === post.user.id ? \r\n                    <Button onClick={handleEditBtn}><ModeEditIcon /></Button>\r\n                    :\r\n                    null\r\n                }\r\n            </Box>\r\n            <CardContent>{post.content}</CardContent>\r\n            {/* render comments */}\r\n            {showComments ? \r\n            <Box>\r\n                <form onSubmit={handleCommentSubmit}>\r\n                    <Box sx={{display: \"flex\"}}>\r\n                        <TextField name=\"content\" fullWidth label=\"add a comment...\" size=\"small\" value={commentText.content} onChange={handleCommentChange} sx={{margin: \"4px\"}}/>\r\n                        <Button type=\"submit\">send</Button>\r\n                    </Box>\r\n                </form>\r\n                {post.post_comments.map((comment) => {\r\n                    return (\r\n                        <>\r\n                            <Divider />\r\n                            <Box sx={{display: \"flex\"}}>\r\n                                <Avatar src={comment.profile.profile_img} sx={{marginLeft: \"9px\", marginTop: \"9px\"}}/> \r\n                                <Typography style={{marginTop: '15px', marginLeft: '6px'}}>{comment.profile.username}</Typography>\r\n                            </Box>\r\n                            <Typography style={{marginLeft:\"10px\"}}>{comment.content}</Typography>\r\n                            \r\n                        </>\r\n                    )\r\n                })}\r\n                {newComments.map(comment => {\r\n                    if (newComments !== []) {\r\n                        return (\r\n                            <>\r\n                            <Divider />\r\n                            <Box sx={{display: \"flex\"}}>\r\n                                <Avatar src={comment.profile.profile_img} sx={{marginLeft: \"9px\", marginTop: \"9px\"}}/> \r\n                                <Typography style={{marginTop: '15px', marginLeft: '6px'}}>{comment.profile.username}</Typography>\r\n                            </Box>\r\n                            <Typography style={{marginLeft:\"10px\"}}>{comment.content}</Typography>\r\n                            </>\r\n                        )\r\n                    }\r\n                })\r\n\r\n                }\r\n            </Box>\r\n            :\r\n            null\r\n            }\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default PostCard","import { useState } from 'react';\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    Button,\r\n    Typography,\r\n    TextField,\r\n} from '@mui/material'\r\nimport SendIcon from '@mui/icons-material/Send';\r\n\r\nfunction CreatePost({ isPostOpen, setIsPostOpen, postData, setPostData}) {\r\n    const [formData, setFormData] = useState({\r\n        title: \"\",\r\n        content: \"\",\r\n        likes: 0,\r\n        ticker: \"\"\r\n    })\r\n    function handleFormChange(e) {\r\n        setFormData({\r\n            ...formData,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n        fetch('/posts', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(formData)\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            // optimistic rendering\r\n            console.log(data)\r\n            setPostData([\r\n                ...postData,\r\n                data\r\n            ])\r\n            setIsPostOpen(!isPostOpen)\r\n\r\n        })\r\n    }\r\n    return(\r\n        <Dialog \r\n        open={isPostOpen} \r\n        onClose={(isPostOpen) => setIsPostOpen(!isPostOpen) } \r\n        fullWidth\r\n        >\r\n            \r\n            <DialogTitle sx={{display: \"flex\"}}>\r\n                <Typography variant=\"h6\">Create Post</Typography>\r\n            </DialogTitle>\r\n            <form onSubmit={handleSubmit}>\r\n                <TextField \r\n                name=\"title\" \r\n                value={formData.title} \r\n                onChange={handleFormChange} \r\n                label=\"title\" \r\n                size=\"small\"\r\n                style={{marginLeft: \"4%\", marginRight: '4%', width:'40%'}}\r\n                />\r\n                <TextField \r\n                name=\"ticker\" \r\n                value={formData.ticker} \r\n                onChange={handleFormChange} \r\n                label=\"ticker\" \r\n                size=\"small\"\r\n                style={{ marginRight: '4%', width:'40%'}}\r\n                /><br />\r\n                <TextField \r\n                name=\"content\" \r\n                label=\"write post...\" \r\n                multiline \r\n                maxRows={6} \r\n                value={formData.content} \r\n                onChange={handleFormChange}\r\n                style={{marginLeft: \"4%\", marginRight: '4%', width:'84%', marginTop: \"9px\", marginBottom: \"2px\"}}\r\n                /><br />\r\n                <Button \r\n                variant=\"contained\" \r\n                type=\"submit\"\r\n                style={{marginTop: '4px', marginLeft: '4%', marginBottom: \"20px\"}}\r\n                >\r\n                    send\r\n                    <SendIcon \r\n                    style={{marginLeft:'3px'}}/>\r\n                </Button>\r\n            </form>\r\n\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default CreatePost","import {\r\n    Box,\r\n    SpeedDial,\r\n    Typography,\r\n    Divider\r\n} from \"@mui/material\";\r\n\r\nimport CreateIcon from '@mui/icons-material/Create';\r\n\r\nimport { useEffect, \r\n    useState \r\n} from \"react\";\r\n\r\nimport PostCard from \"../Cards/ForumPostCard\";\r\nimport CreatePost from \"../Dialogs/CreatePost\";\r\n\r\nexport default function FourmPage({ user }) {\r\n    const [postData, setPostData] = useState(false)\r\n    const [isPostOpen, setIsPostOpen] = useState(false)\r\n    useEffect(() => {\r\n        fetch('/posts')\r\n        .then(res => res.json())\r\n        .then((data) => {\r\n            setPostData(data)\r\n            console.log(data)\r\n        })\r\n    },[])\r\n    function handlePostButton() {\r\n        setIsPostOpen(true)\r\n    }\r\n    return (\r\n        <Box sx={{margin: '3%'}}>\r\n            <CreatePost isPostOpen={isPostOpen} setIsPostOpen={setIsPostOpen} setPostData={setPostData} postData={postData}/>\r\n            <SpeedDial\r\n            ariaLabel=\"SpeedDial basic example\"\r\n            sx={{ position: 'fixed', bottom: 16, right: 16 }}\r\n            icon={<CreateIcon />}\r\n            onClick={handlePostButton}\r\n            />\r\n            <Typography variant=\"h4\" style={{textAlign:\"center\"}}>MoreForum</Typography>\r\n            <Divider sx={{marginBottom: '2%'}}/>\r\n            {   postData ? \r\n            <Box>\r\n                {\r\n                    postData.map((post) => {\r\n                        return <PostCard post={post} user={user}/>\r\n                    })\r\n                }\r\n            </Box>\r\n            :\r\n            <Typography>loading...</Typography>\r\n            }\r\n        </Box>\r\n    )\r\n}","import { useState, useEffect } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport \"./App.css\";\nimport HomePage from \"./components/pages/HomePage\";\nimport SignupPage from \"./components/pages/SignupPage\";\nimport SignInPage from \"./components/pages/SignInPage\";\nimport MyAppBar from \"./components/MyAppBar\";\nimport UserPage from \"./components/pages/UserPage\";\nimport PortfolioPage from \"./components/pages/PortfolioPage\";\nimport WatchListPage from \"./components/pages/WatchListPage\";\nimport SearchResultsPage from \"./components/pages/SearchResultsPage\";\nimport FourmPage from \"./components/pages/FourmPage\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#1C6E8C\",\n    },\n    secondary: {\n      main: \"#5171A5\",\n    },\n    third: {\n      main: \"#D6F9FF\",\n      contrastText: \"#07020D\",\n    },\n    blackish: {\n      main: \"#07020D\",\n      contrastText: \"#FFFFFF\",\n    },\n  },\n});\n\nfunction App() {\n  const [user, setUser] = useState(false);\n  const [searchResults, setSearchResults] = useState(false);\n  const [priceData, setPriceData] = useState(false)\n  const [tickerForFetch, setTickerForFetch] = useState(false)\n\n\n  useEffect(() => {\n    // checks for user\n    fetch(\"/me\")\n      .then((r) => r.json())\n      .then((userData) => {\n        if (userData.errors) {\n          console.log(userData.errors)\n        } else {\n          setUser(userData);\n          //setTickerArray(user.portfolio_items)\n        }\n      });\n  }, []);\n\n  function setTickerArray(arrOfObj) {\n    const  tickers = arrOfObj.map((portfolioObj) => portfolioObj.ticker)\n    setTickerForFetch(tickers)\n    console.log(\"tick array\", tickerForFetch)\n  }\n  \n  return (\n    <ThemeProvider theme={theme}>\n      <BrowserRouter>\n        <MyAppBar\n          user={user}\n          setUser={setUser}\n          setSearchResults={setSearchResults}\n          searchResults={searchResults}\n        />\n        <Switch>\n          <Route exact path=\"/\">\n            <HomePage />\n          </Route>\n          <Route path=\"/signup\">\n            <SignupPage setUser={setUser}/>\n          </Route>\n          <Route path=\"/signin\">\n            <SignInPage setUser={setUser} />\n          </Route>\n          <Route path=\"/my-account\">\n            <UserPage user={user} setUser={setUser} />\n          </Route>\n          <Route path=\"/my-portfolio\">\n            <PortfolioPage user={user} priceData={priceData} setPriceData={setPriceData} tickerForFetch={tickerForFetch} setTickerForFetch={setTickerForFetch}/>\n          </Route>\n          <Route path=\"/my-watchlists\">\n            <WatchListPage user={user}/>\n          </Route>\n          <Route path=\"/asset-search\">\n            <SearchResultsPage results={searchResults} user={user} priceData={priceData} setPriceData={setPriceData} tickerForFetch={tickerForFetch} setTickerForFetch={setTickerForFetch}/>\n          </Route>\n          <Route path=\"/forum\">\n            <FourmPage user={user}/>\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}